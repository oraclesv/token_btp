import "util.scrypt";
import "txUtil.scrypt";
import "uniqueProto.scrypt";

contract UniqueGenesis {

    public function unlock(
        SigHashPreimage txPreimage,
        bytes prevouts,
        bytes outputScript,
        int outputSatoshis
    ) {
        require(Tx.checkPreimageOpt(txPreimage));

        // check prevouts
        require(hash256(prevouts) == Util.hashPrevouts(txPreimage));

        bytes uniqueID = prevouts[0: TxUtil.OUTPOINT_LEN];

        int scriptLen = len(outputScript);
        
        // check the output script
        require(uniqueID == UniqueProto.getUniqueID(outputScript, scriptLen));
        require(UniqueProto.getGenesisFlag(outputScript, scriptLen) == 0);
        require(UniqueProto.getProtoType(outputScript, scriptLen) == UniqueProto.PROTO_TYPE);
        // flag == 'oraclesv'
        require(UniqueProto.PROTO_FLAG == UniqueProto.getProtoFlag(outputScript, scriptLen));

        bytes output = Util.buildOutput(outputScript, outputSatoshis);
        require(hash256(output) == Util.hashOutputs(txPreimage));
    }
}